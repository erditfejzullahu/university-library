// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum Status {
  IN_REVIEW
  ACCEPTED
}

enum BorrowedStatus {
  BORROWED
  RETURNED
}

model User {
  id String @id @default(uuid())
  fullName String
  password String
  email String @unique
  role Role @default(USER)
  status Status @default(IN_REVIEW)
  universityId Int @unique
  universityIdCard String
  createdAt DateTime @default(now())
  lastActivity DateTime @default(now())
  borrowedBooks BorrowedBooks[]
}

model Books {
  id String @id @default(uuid())
  title String @db.VarChar(150)
  author String
  Genre String
  rating Float
  totalCopies Int
  availableCopies Int
  description String
  coverColor String
  videoUrl String
  summary String

  borrowedBooks BorrowedBooks[]
}

model BorrowedBooks {
  id String @id @default(uuid())
  bookId String
  userId String
  status BorrowedStatus @default(BORROWED)
  borrowedAt DateTime @default(now())
  dueDate DateTime?

  book Books @relation(fields: [bookId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@unique([bookId, userId])
}